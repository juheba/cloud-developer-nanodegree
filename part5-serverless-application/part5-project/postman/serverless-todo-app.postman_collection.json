{
	"info": {
		"_postman_id": "de0c2c29-6321-435e-b4c4-ac0f348f4429",
		"name": "serverless-todo-app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get all todos",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/{{STAGE}}/todos",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"{{STAGE}}",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get todos with limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"pm.environment.set(\"temp_nextKey\", responseJson.nextKey);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (null === pm.environment.get(\"temp_nextKey\") || undefined === pm.environment.get(\"temp_nextKey\")) {\r",
							"    pm.request.removeQueryParams(\"nextKey\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BASE_URL}}/{{STAGE}}/todos?limit=2&nextKey={{temp_nextKey}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"{{STAGE}}",
						"todos"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "nextKey",
							"value": "{{temp_nextKey}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"pm.environment.set(\"temp_todoId\", responseJson.item.todoId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Diablo zocken\",\n\t\"dueDate\": \"2023-06-19\"\n}"
				},
				"url": {
					"raw": "{{BASE_URL}}/{{STAGE}}/todos",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"{{STAGE}}",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update todo",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Blumen gie√üen\",\n\t\"dueDate\": \"2023-06-19\",\n\t\"done\": true\n}"
				},
				"url": {
					"raw": "{{BASE_URL}}/{{STAGE}}/todos/{{temp_todoId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"{{STAGE}}",
						"todos",
						"{{temp_todoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get attachment URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"pm.environment.set(\"temp_uploadUrl\", responseJson.uploadUrl);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BASE_URL}}/{{STAGE}}/todos/{{temp_todoId}}/attachment",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"{{STAGE}}",
						"todos",
						"{{temp_todoId}}",
						"attachment"
					]
				}
			},
			"response": []
		},
		{
			"name": "UploadURL with actual image binary",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "file",
					"file": {
						"src": "/C:/Users/Julia/Git/juheba-github/cloud-developer-nanodegree/part5-serverless-application/part5-project/postman/myoctocat.com_build-your-octocat.png"
					}
				},
				"url": {
					"raw": "{{temp_uploadUrl}}",
					"host": [
						"{{temp_uploadUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete todo",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BASE_URL}}/{{STAGE}}/todos/{{temp_todoId}}",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"{{STAGE}}",
						"todos",
						"{{temp_todoId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var base_url;",
					"if (pm.environment.get(\"LOCALHOST\")) {",
					"    //console.log(\"offline\")",
					"    base_url = pm.environment.get(\"LOCALHOST\");",
					"} else {",
					"    //console.log(\"online\")",
					"    base_url = `https://${pm.environment.get(\"API_ID\")}.execute-api.${pm.environment.get(\"AWS_REGION\")}.amazonaws.com`",
					"}",
					"pm.collectionVariables.set(\"BASE_URL\", base_url);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": ""
		}
	]
}